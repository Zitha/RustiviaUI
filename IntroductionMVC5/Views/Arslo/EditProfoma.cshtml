@model IntroductionMVC5.Models.ArsloTrading.ArsloProfoma

@{
    ViewBag.Title = "EditProfoma";
    //Layout = "~/Views/Shared/_ArsloLayout.cshtml";
}

<script type="text/javascript">
    var i = 1;
    function calculatePriceTotal() {

        for (a = 0; a < i; a++) {
            var itm = '#unitPrice' + a;

            var itmPrice = 1 * $(itm).val();
            var isitmPriceNumber = isNaN(itmPrice);

            if (isitmPriceNumber) {
                var replaceVal = $(itm).val().substr(0, $(itm).val().length - 1);
                $(itm).val(replaceVal);
                return;
            }

            var qty = '#quantity' + a;
            var qtyVal = 1 * $(qty).val();
            var isqtyValNumber = isNaN(qtyVal);
            if (isqtyValNumber) {
                var replaceVal = $(qty).val().substr(0, $(qty).val().length - 1);
                $(qty).val(replaceVal);
                return;
            }

            if (itmPrice && qtyVal) {
                var total = itmPrice * qtyVal;
                $('#unitTotalPrice' + a).val(total.toFixed(2));

                if (total > 0) {
                    $("#editProfomaBtn").removeAttr('disabled');
                }
            } else {
                $("#editProfomaBtn").attr('disabled', 'disabled');
            }
        }
        $("#itemCount").val(i);
    }

    $(document).ready(function () {
        var now = new Date();
        var month = (now.getMonth() + 1);
        var day = now.getDate();
        if (month < 10)
            month = "0" + month;
        if (day < 10)
            day = "0" + day;
        var today = now.getFullYear() + '/' + month + '/' + day;
        if (!$('#profomaDate').val()) {
            $('#profomaDate').val(today);
        }
        $('.datepicker').datepicker({
            autoclose: true,
            format: 'yyyy/mm/dd',
        }).on('changeDate', function (ev) {
            $('.datepicker').datepicker('hide');
        });
    });
</script>

<h2>Edit Profoma</h2>

@using (Html.BeginForm("EditProfoma", "Arslo", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.ProfomaNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ProfomaNumber, new { @class = "form-control", @type = "text", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.ProfomaNumber)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UCRNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.UCRNumber, new { @class = "form-control", @type = "text", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.UCRNumber)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Date, new { @class = "datepicker form-control", @type = "text", @id = "profomaDate" })
            @Html.ValidationMessageFor(model => model.Date)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Status, (SelectList)ViewBag.Status, Model.Status, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status)
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Amount, string.Empty, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Amount)
        </div>
    </div>*@
    <div class="row">
        <div class="col-xs-12">
            <table class="table table-bordered table-hover" id="tab_logic" style="margin-top:2%">
                <thead>
                    <tr>
                        <th class="text-center">
                            Description
                        </th>
                        <th class="text-center">
                            Quantity
                        </th>
                        <th class="text-center">
                            Unit Price
                        </th>
                        <th class="text-center">
                            Total Price
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int i = 0;
                        foreach (var promaItem in Model.ProfomaItems)
                        {

                            <tr>
                                @Html.TextBoxFor(model => promaItem.Id, new { @class = "form-control", @type = "hidden", @id = "id" + i, @Name = "id" + i })
                                <td>
                                    @Html.TextBoxFor(model => promaItem.Description, new { @class = "form-control", @type = "text", @id = "description" + i, @Name = "description" + i })
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => promaItem.Quantity, new { @class = "form-control", @type = "number", @id = "quantity" + i, @Name = "quantity" + i, @onkeyup =         "calculatePriceTotal()" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => promaItem.Price, new { @class = "form-control", @type = "number", @id = "unitPrice" + i, @Name = "unitPrice" + i, onkeyup =   "calculatePriceTotal  ()" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => promaItem.TotalPrice, new { @class = "form-control", @type = "text", @readonly = "readonly", @id = "unitTotalPrice" + i, @Name =      "unitTotalPrice" + i })
                                </td>
                            </tr>
                              i = i + 1;
                         }
                      }
                </tbody>
                    
            </table>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            <input type="button" class="btn btn-primary" onclick=" location.href='@Url.Action("Index", "Arslo")'" value="Back" />
            <button value="Create" class="btn btn-primary" onclick=" location.href='@Url.Action("EditProfoma", "Arslo")'" id="editProfomaBtn">Edit</button>
        </div>
    </div>
</div>
}
