@using IntroductionMVC5.Models.PettyCash
@model IntroductionMVC5.Web.ViewModel.PettyCashViewModel

@{
    ViewBag.Title = "Petty Cash";
}

<script>
    $(document).ready(function () {
        //End
        $("#balanceVeiw").hide();
        $("#saveBalance").attr("disabled", "disabled");

        $('#balanceButton').click(function () {
            $("#balanceVeiw").show();
            $("#balanceButton").hide();
            $("#addpaymentButton").prop('disabled', true);
            $("#addreceiptButton").prop('disabled', true);
        });
        $('#cancelBalance').click(function () {
            $("#balanceVeiw").hide();
            $("#balanceButton").show();
            $("#addpaymentButton").prop('disabled', false);
            $("#addreceiptButton").prop('disabled', false);
        });

        $('#myTab a').click(function (e) {
            e.preventDefault();
            $(this).tab('show');
        });
        //Set Date
        SetDate();
        // store the currently selected tab in the hash value
        $("ul.nav-tabs > li > a").on("shown.bs.tab", function (e) {
            var id = $(e.target).attr("href").substr(1);
            window.location.hash = id;
        });

        // on load of the page: switch to the currently selected tab
        var hash = window.location.hash;
        $('#myTab a[href="' + hash + '"]').tab('show');
    });

    function validateNumber(e) {
        //if the letter is not digit then display error and don't type anything
        if (e.which != 46 &&e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            e.preventDefault();
            //display error message
            $("#errmsg").html("Digits Only").show();
        }
    };

    function SetDate() {
        //Date Formatting and Initialization
        var now = new Date();
        var month = (now.getMonth() + 1);
        var day = now.getDate();
        if (month < 10)
            month = "0" + month;
        if (day < 10)
            day = "0" + day;
        var today = now.getFullYear() + '/' + month + '/' + day;
        if (!$('#searchDate').val()) {
            $('#searchDate').val(today);
        }
        $('.datepicker').datepicker({
            autoclose: true,
            format: 'yyyy/mm/dd',
        }).on('changeDate', function (ev) {
            $('.datepicker').datepicker('hide');
        });
    };

    function getTotal() {
        var total = 200 * $('#twohundrend').val() +
            100 * $('#onehundrend').val() +
            50 * $('#fifthy').val() +
            20 * $('#tweeties').val() +
            10 * $('#ten').val() + 1 * $('#coins').val();
        $('#total').val(total);
        var balance = @Model.PettyCashAccount.Balance;
        if (total == balance) {
            $("#saveBalance").removeAttr("disabled");
        }else {
            $("#saveBalance").attr("disabled", "disabled");
        }
    };
</script>

<ul class="nav nav-tabs" style="margin-bottom: 15px;margin-top: 10px" id="myTab">
    <li class="active" style="background-color: skyblue">
        <a href="#home" data-toggle="tab">Daily Petty Cash Entries</a>
    </li>
    <li class="" style="background-color: skyblue">
        <a href="#profile" data-toggle="tab">Petty Cash Account</a>
    </li>
</ul>
<div id="myTabContent" class="tab-content">
    <div class="tab-pane fade active in" id="home" style="width: 1200px">
        <h2>Petty Cash</h2>
        <div class="row">
            <div class="col-lg-8">
                @using (Html.BeginForm("Search", "PettyCash", FormMethod.Get))
                {
                    <div class="col-lg-5">
                        <input name="date" id="searchDate" class="datepicker" type="text" value="@Request["date"]" style="margin-bottom: 5px" />
                        <span class="add-on"><i class="glyphicon glyphicon-th"></i></span>
                        <button class="btn btn-default btn-default" type="submit" style="margin-bottom: 5px">
                            <span class="glyphicon glyphicon-search"></span> Go
                        </button>
                    </div>
                }
            </div>
            <div class="col-lg-4">
                Seleted Date: <strong> @Model.PettyCashDate.ToString("d")</strong>
            </div>
        </div>
        @using (Html.BeginForm("BalancePettyCash", "PettyCash", FormMethod.Post))
        {
            <fieldset>
                <table class="table table-bordered">
                    <thead>
                        <tr class="table table-condensed">
                            @if (@ViewBag.ClearAllMessage)
                            {
                                <td colspan="9">
                                    <div class="alert alert-dismissable alert-success" style="width: 100%">
                                        All Entries Cleared.
                                    </div>
                                </td>
                            }
                        </tr>
                        <tr class="table table-condensed">

                            @if (Model.BalanceInfomation == null && Model.PettyCashDate.Date == DateTime.Now.Date)
                            {
                                if (Model.IsLastDayBalanced)
                                {
                                    <td>
                                        <button class="btn btn-primary btn-default" style="margin-bottom: 5px" data-toggle="modal" data-target="#myModal" id="addpaymentButton">
                                            <span class="glyphicon glyphicon-plus"></span> Add payment
                                        </button>
                                    </td>
                                    <td colspan="4">
                                        <button class="btn btn-primary btn-default" style="margin-bottom: 5px" data-toggle="modal" data-target="#receiptModal" id="addreceiptButton">
                                            <span class="glyphicon glyphicon-plus"></span> Add receipt
                                        </button><br />
                                    </td>
                                }
                                else
                                {
                                    <td colspan="5">
                                        <div class="alert alert-dismissable alert-danger" style="width: 100%">
                                            Petty cash for the Previous  day was not Balanced! Balance Previous day Before adding entries for today.
                                        </div>
                                    </td>
                                }
                            }
                            else
                            {
                                <td colspan="5">
                                    @if (@Model.BalanceInfomation != null)
                                    {
                                        <div class="alert alert-dismissable alert-info" style="width: 100%">
                                            Petty cash for the day was balanced by @Model.BalanceInfomation.SystemUser
                                        </div>
                                    }
                                    else if (@Model.DailyActiviList != null && @Model.DailyActiviList.Count > 0)
                                    {
                                        <div class="alert alert-dismissable alert-danger" style="width: 100%">
                                            Petty cash for  @Model.PettyCashDate was not Balanced
                                            <input type="button" value="Balance" class="btn btn-primary btn-default" id="balanceButton" style="margin-bottom: 5px" />
                                        </div>
                                    }
                                </td>
                            }
                            <td></td>
                            <td style="align-content: center; vertical-align: middle">
                                <label>
                                    <strong>
                                        Opening Balance
                                    </strong>
                                </label>
                            </td>
                            <td style="align-content: center; vertical-align: middle">
                                <strong>
                                    @string.Format("R {0}", @Model.EndDayBalance.ClosingBalance)
                                </strong>
                            </td>
                        </tr>
                        <tr class="info">
                            <th></th>
                            <th>
                                Date
                            </th>
                            <th>
                                Type
                            </th>
                            <th>
                                Description
                            </th>
                            <th>
                                Pastel No
                            </th>
                            <th>
                                Ref No
                            </th>
                            <th>
                                Cleared
                            </th>
                            <th>
                                Amount
                            </th>
                            <th>
                                Petty Cash Balance
                            </th>
                        </tr>
                    </thead>

                    @foreach (var item in Model.DailyActiviList)
                    {
                        <tr class="active">
                            @if (item.GetType() == typeof(Payment))
                            {
                                var payment = (Payment)item;
                                <td>
                                    @if (!payment.IsCleared)
                                    {
                                        <input type="button" id="button" class="btn btn-info btn-xs" value="Edit" onclick=" location.href='@Url.Action("EditPayment", "PettyCash", new {id = payment.Id})    ' " />
                                    }
                                    <input type="button" id="button" class="btn btn-default btn-xs" value="Print" onclick=" location.href='@Url.Action("PrintPayementReciept", "PettyCash", new {id = payment.Id})    ' " />
                                </td>
                                <td class="danger">
                                    @Html.DisplayFor(modelItem => payment.Date)
                                </td>
                                <td class="danger">
                                    @Html.DisplayFor(modelItem => payment.PaymentType.Type)
                                </td>
                                <td class="danger">
                                    @Html.DisplayFor(modelItem => payment.Description)
                                </td>
                                <td class="danger">
                                    @Html.DisplayFor(modelItem => payment.PastelNo)
                                </td>
                                <td class="danger">
                                    @Html.DisplayFor(modelItem => payment.AutoGenNumber)
                                </td>
                                <td class="danger">
                                    @if (payment.IsCleared)
                                    {
                                        <span style="color: green" class="glyphicon glyphicon-ok"></span>
                                    }
                                    else
                                    {
                                        <span style="color: red" class="glyphicon glyphicon-remove"></span>
                                    }
                                </td>
                                <td class="danger">
                                    @String.Format("R -{0}", payment.Amount)
                                </td>
                                <td class="danger">
                                    @String.Format("R {0}", payment.PettyAccount)
                                </td>
                            }
                            @if (item.GetType() == typeof(Receipt))
                            {
                                var receipt = (Receipt)item;
                                <td>

                                    <input type="button" id="button" class="btn btn-info btn-xs" value="Edit" onclick=" location.href='@Url.Action("EditReceipt", "PettyCash", new { id = receipt.Id })    ' " />

                                    <input type="button" id="button" class="btn btn-default btn-xs" value="Print" onclick=" location.href='@Url.Action("PrintReciept", "PettyCash", new { id = receipt.Id })    ' " />
                                </td>
                                <td class="success">
                                    @Html.DisplayFor(modelItem => receipt.Date)
                                </td>
                                <td class="success">
                                    @Html.DisplayFor(modelItem => receipt.Type)
                                </td>
                                <td class="success">
                                    @string.Format("{0} - {1}", receipt.Reference, receipt.ExtraInfo)
                                </td>
                                <td class="success">
                                    @Html.DisplayFor(modelItem => receipt.PastelNo)
                                </td>
                                <td class="success">
                                    @Html.DisplayFor(modelItem => receipt.AutoGenNumber)
                                </td>
                                <td class="success">
                                    @if (receipt.IsCleared)
                                    {
                                        <span style="color: green" class="glyphicon glyphicon-ok"></span>
                                    }
                                    else
                                    {
                                        <span style="color: red" class="glyphicon glyphicon-remove"></span>
                                    }
                                </td>
                                <td class="success">
                                    @String.Format("R {0}", receipt.Amount)
                                </td>
                                <td class="success">
                                    @String.Format("R {0}", receipt.PettyAccount)
                                </td>
                            }
                        </tr>
                    }
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td>
                            <strong>
                                Balance
                            </strong>
                        </td>
                        <td class="warning">
                            @if (@Model.BalanceInfomation != null)
                            {
                                @String.Format("R {0}", Model.BalanceInfomation.ClosingBalance)
                            }
                            else
                            {
                                @String.Format("R {0}", Model.PettyCashAccount.Balance)
                            }
                        </td>
                    </tr>
                </table>

                @if (Model.BalanceInfomation == null && Model.IsLastDayBalanced)
                {
                    <input type="button" value="Balance" class="btn btn-primary btn-default" id="balanceButton" style="margin-bottom: 5px" />
                }
                else
                {
                    <input type="button" class="btn btn-primary btn-default" value="Print day report" onclick=" location.href='@Url.Action("PrintDayEnd", "PettyCash", new { pettyCashDate = Model.PettyCashDate })    ' " />
                }
                <span id="errmsg" style="color: red"></span>
                <table class="table table-bordered" style="width: 25%" id="balanceVeiw">
                    <tr class="info">
                        <td><label>R200 X</label></td>
                        <td><input type="number" min="0" step="1" style="width: 80px" class="form-control" id="twohundrend" onchange=" getTotal() " onkeypress=" validateNumber(event) " /></td>
                    </tr>
                    <tr class="info">
                        <td><label>R100 X</label></td>
                        <td><input type="number" min="0" step="1" class="form-control" style="width: 80px" id="onehundrend" onchange=" getTotal() " onkeypress=" validateNumber(event) " /></td>
                    </tr>
                    <tr class="info">
                        <td><label>R50 X</label></td>
                        <td><input type="number" min="0" step="1" class="form-control" style="width: 80px" id="fifthy" onchange=" getTotal() " onkeypress=" validateNumber(event) " /></td>
                    </tr>
                    <tr class="info">
                        <td><label>R20 X</label></td>
                        <td><input type="number" min="0" step="1" class="form-control" style="width: 80px" id="tweeties" onchange=" getTotal() " onkeypress=" validateNumber(event) " /></td>
                    </tr>
                    <tr class="info">
                        <td><label>R10 X</label></td>
                        <td><input type="number" min="0" step="1" class="form-control" style="width: 80px" id="ten" onchange=" getTotal() " onkeypress=" validateNumber(event) " /></td>
                    </tr>
                    <tr class="info">
                        <td><label>Coins</label></td>
                        <td><input type="number" min="0" step="1" class="form-control" style="width: 80px" id="coins" onchange=" getTotal() " onkeypress=" validateNumber(event) " /></td>
                    </tr>
                    <tr class="warning">
                        <td><label>Total</label></td>
                        <td><input type="text" class="form-control" readonly="readonly" style="width: 80px" id="total" /></td>
                    </tr>
                    <tr class="warning">
                        <td><label></label></td>
                        <td>
                            <input type="button" class="btn btn-primary btn-default btn-sm" value="Cancel" id="cancelBalance" />
                            <input type="button" id="saveBalance" class="btn btn-primary btn-default btn-sm" value="Save" onclick=" location.href='@Url.Action("BalancePettyCash", "PettyCash", new { pettyCashDate = Model.PettyCashDate.ToString("yyyy-MM-dd") })    ' " />
                        </td>
                    </tr>
                </table>
            </fieldset>
        }
        <!-- Button trigger modal -->
        <!-- Modal -->
        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header" style="background-color: lightblue">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title" id="myModalLabel">Payment</h4>
                    </div>
                    @using (Html.BeginForm("CreatePayment", "PettyCash", FormMethod.Post))
                    {
                        <div class="modal-body">

                            <div class="form-group">
                                @{ Html.RenderPartial("CreatePayment", new Payment { Date = DateTime.Now }); }
                            </div>
                        </div>
                        <div class="modal-footer">
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="modal fade" id="receiptModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header" style="background-color: lightblue">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title" id="myModalLabel">Receipt</h4>
                    </div>
                    @using (Html.BeginForm("CreateReceipt", "PettyCash", FormMethod.Post))
                    {
                        <div class="modal-body">

                            <div class="form-group">
                                @{ Html.RenderPartial("CreateReceipt", new Receipt { Date = DateTime.Now }); }
                            </div>
                        </div>
                        <div class="modal-footer">
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="tab-pane fade" id="profile">
        @{Html.RenderPartial("_Accounts", Model.Accounts);}
    </div>
</div>
